# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не превосходящее 105. Программа должна вывести все
# пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую
# пару не дает).

# https://ru.stackoverflow.com/questions/1348243/%d0%9f%d0%be%d0%b8%d1%81%d0%ba-%d0%b4%d1%80%d1%83%d0%b6%d0%b5%d1%81%d1%82%d0%b2%d0%b5%d0%bd%d0%bd%d1%8b%d1%85-%d0%bf%d0%b0%d1%80-%d1%87%d0%b8%d1%81%d0%b5%d0%bb-%d1%81-%d0%bf%d0%be%d0%bc%d0%be%d1%89%d1%8c%d1%8e-%d1%86%d0%b8%d0%ba%d0%bb%d0%be%d0%b2

# все делители числа 284
# 220 = 1 + 2 + 4 + 71 + 142
# все делители числа 220
# 284 = 1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110

def pair(value): # Получаем корень числа, отбрасываем дробную часть
    sq_num = int(value ** 0.5)
# Выставляем начальное значение в переменной Если переменная sq_num возведённая в квадрат
# не равна полученному числу, прибавляем 0. Иначе прибавляем это число, т.к. оно тоже множитель
    res = 1 + (0 if sq_num ** 2 != value else sq_num)
# Цикл от 2 др корня числа
    for i in range(2, sq_num):
# Если полученное число делиться на i без остатка
	    if value % i == 0:
		    res += i + value // i
        return res
	# Складываем в переменную значение i и второй делитель, например value = 10, i = 2, второй делитель 5
	
for j in range(10, 300):
	    # Первое число, это сумма множителей j
	sum1 = pair(j)
	
	    # Второе число, это сумма множителей sum1
	sum2 = pair(sum1)
	
	    # Если второе число равно j и первое число меньше второго
	    # Второе условие защита от дубликатов,
	    # записанных наоборот
	if sum2 == j and sum1 < sum2:
		print(j, sum1)
	